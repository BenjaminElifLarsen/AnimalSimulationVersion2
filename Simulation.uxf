<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>2113</x><y>0</y><w>560</w><h>960</h></coordinates><panel_attributes>/Eukaryote/
--
# isDead : bool
# timeAlive : float
# timeSinceLastUpdate : float
# reproductionCooldown : float
# lengthOfReproduction : float
# periodInReproduction : float
# mapInformation : MapInformation
# helper : IHelper
# lifeformPublisher : LifeformPublisher
# drawPublisher : DrawPublisher
--
# getAge() : float
# setAge(float) : void
# getReproductionAge() : float
# setReproductionAge(float): void
# getMaxAge() : float
# setMaxAge(float) : void
# getSpecies() : float
# setSpecies(float) : void
# getLocation() : (Vector)
# setLocation(Vector) : void
# getTimeToReproductionNeed() : float
# setTimeToReproductionNeed(float) : void
# getDesign() : Point[]
# setDesign(Point[]) : void
# getColour() : Colour
# setColour(Colour) : void
# getID() : string
# setID(string) : void
# getHealth() : float
# setHealth(float) : void
# getMaxHealth() : float
# setMaxHealth(float) : void
# getHuntedBy() : string[]
# setHuntedBy(string[]) : void
# getNutrientValue() : float
# setNutrientValue(float) : void
# getOneAgeInSeconds() : float
# setOneAgeInSeconsd(float) : void
# getHasReproduced() : bool
# setHasReproduced(bool) : void
# getContactCooldownLength() : float
- setContactCooldownLength(float) : void
--
+ Eukaryote(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
- Eukaryote(IHelper, LifeformlPublisher, DrawPublisher, MapInformation)
/# AI() : void/
/# DeathCheckAI() : bool/
{virtual} # TimeUpdate() : void
/# Reproduce() : void /
{virtual} # Death() : void
{virtual} # IsPossiblePreyEventHandler(object, ControlEvents.GetPossiblePreyEventArgs) : void
{virtual} # IsPreyEventHandler(object, ControlEvents.SetPreyEventArgs) : void
{virtual} # RemovePredatorEventHandler(object, ControlEvents.RemovePreyEventArgs) : void
{virtual} # LocationEventHandler(object, ControlEvents.GetOtherLocationEventArgs) : void
{virtual} # GetAllLocationsEventHandler(object, ControlEvents.GetAllLocationsEventArgs) : void
{virtual} # EatenEventHandler(object, ControlEvents.EatenEventArgs) : void
{virtual} # DeathEventHandler(object, ControlEvents.DeadEventArgs) : void
{virtual} # DamageEventHandler(object, ControlEvents.DoHealthDamageEventArgs) : void
{virtual} # DrawEventHandler(object, ControlEvents.DrawEventArgs) : void
{virutal} # SpeciesAmountEventHandler(object, ControlEvents.SpeciesAndAmountEventArgs) : void
{virtual} # ControlEventHandler(object, ControlEvents.AIEventArgs) : void
{virtual] # RemoveSubscriptions() : void

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1843</x><y>1250</y><w>470</w><h>140</h></coordinates><panel_attributes>/Plantae/
--
# spreadRange : float
# (Minimum, Maximum) offspringAmount : (byte,byte)
--
+ Plantae(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} # AI() : void
/# Polinate() : void /
{override} # Reproduce() : void
# GenerateChildren(int,object[]) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2413</x><y>1070</y><w>500</w><h>850</h></coordinates><panel_attributes>/Animalia/
--
# foodID : string
# mateID : string
# (Gender, Weight) genderInformation : (char,byte)[]
--
# getGender() : char
# setGender(char) : void
# (Minimum, Maximum) getBirthAmount() : (byte,byte)
# setBirthAmount(byte,byte) : void
# getMovementSpeed() : float
# setMovementSpeed(float) : void
# getHunger() : float
# setHunger(float) : void
# getMaxHunger() : float
# setMaxHunger(float) : float
# getFoodSource() : string[]
# setFoodSource(string[]) : void
# getMoveTo() : Vector
# setMoveTo(Vector) : void
# getCurrentMovementSpeed() : float
# setCurrentMovementSpeed(float) : void
# getMateLocation(void) : Vector
# setMateLocation(Vector) : void
# getHungerFoodSeekingLevel() : float
# setHungerFoodSeekingLevel(float) : void
# getMaxFoodDistanceRange() : float
# setMaxFoodDistanceRange(float) : void
# getFindMateCooldown() : float
# setFindMateCooldown(float) : void
# getFindFoodCooldown() : float
# setFindFoodCooldown(float) : void
--
+ Animalia(string Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
# Animalia(string,(float, float), IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} DeathCheckAI() : bool
/# GiveBirthAI() : bool/
/# HungerAI() : bool/
/# ReproductionAI(): bool/
/# MovementAI() : bool/
{virtual} # Move() : void
{override} # TimeUpdate() : void
{virtual} # GenerateRandomEndLocation() : Vector
{virtual} # FindMate() : string
{virtual} # GetLifeformLocation(string) : Vector
{virtual} Mate() : void 
{override} # Reproduce() : void
{virtual} # GenerateGender((char, byte)[]) : char
{virtual} # FindFood() : string
{virutal} # FindNearestFood() : string
{virtual} # Eat() : void
{override} # Death() : void
{virtual} # PreyHasDiedEventHandler(object, ControlEvents.PossibleMateEventArgs) : void
{virtual} # CanMateEventHandler(object, ControlEvents.PossibleMateEventArgs) : void 
{virtual} # GetMateEventHandler(object, ControlEvents.SetMateEventArgs) : void
{virtual} # RemoveMateEventHandler(object, ControlEvents.RemoveMateEventArgs) : void
{virtual} # PregnacyEventHandler(object, ControlEvents.PregnacyEventArgs) : void
{override} # RemoveSubscriptions() : void









</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2073</x><y>950</y><w>310</w><h>320</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>290;10;290;210;10;210;10;300</additional_attributes></element><element><id>Relation</id><coordinates><x>2353</x><y>950</y><w>330</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;50;310;50;310;120</additional_attributes></element><element><id>Text</id><coordinates><x>2373</x><y>960</y><w>120</w><h>30</h></coordinates><panel_attributes>Type of Kingdom
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2123</x><y>1970</y><w>490</w><h>60</h></coordinates><panel_attributes>/Carnivore/
--
+ Carnivore(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2643</x><y>1970</y><w>530</w><h>110</h></coordinates><panel_attributes>/Herbavore/
--
+ Herbavore(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} # TimeUpdate() : void
{override} # AI() : void
{virtual} # EscapingAI() : bool
{override} # IsPossiblePreyEventHandler(object, ControlEvents.GetPossiblePreyEventArgs) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1883</x><y>1440</y><w>490</w><h>340</h></coordinates><panel_attributes>/Dioecious/
--
# mateID : string
# mateLocation : Vector
# mateDistance : float
# reproductionExtraTime : float
# distanceDivider : float
--
# getGender() : char
# setGender(char) : void
# getFindMateCooldown() : float
# setFindMateCooldown(float) : void
--
+ Dioecious(string,(float, float), IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} # AI() : void
{override} # Reproduce() : void
{virtual} # GetMateLocation(string) : Vector
{override} # TimeUpdate() : void
{override} # Polinate() : void
{virtual} # GenderGenerator() : char
{virtual} # FindMate() : string
{virtual} # DistanceTime() : float
{virtual} # CanMateEventHandler(object, ControlEvents.PossibleMAteEventArgs) : void
{override} # RemoveSubscriptions() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1373</x><y>1440</y><w>500</w><h>80</h></coordinates><panel_attributes>/Monoecious/
--
+ Monoecious(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} # AI() : void
{override} # Polinate() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1613</x><y>1380</y><w>470</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>450;10;450;40;10;40;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>2053</x><y>1380</y><w>100</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40;80;40;80;60</additional_attributes></element><element><id>Relation</id><coordinates><x>2653</x><y>1910</y><w>90</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40;70;40;70;60</additional_attributes></element><element><id>Relation</id><coordinates><x>2553</x><y>1910</y><w>130</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>110;10;110;40;10;40;10;60</additional_attributes></element><element><id>Text</id><coordinates><x>2583</x><y>1930</y><w>100</w><h>30</h></coordinates><panel_attributes>Type of Food
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>2063</x><y>1400</y><w>120</w><h>30</h></coordinates><panel_attributes>Type of Sexuality
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1843</x><y>2070</y><w>520</w><h>100</h></coordinates><panel_attributes>SleepingCarnivore
--
+ SleepingCarnivore(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} # TimeUpdate() : void
{override} # AI() : void
{virtual} # FallAsleepAIO() : bool
{virtual} # WakeUpAI() : bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2973</x><y>2130</y><w>540</w><h>140</h></coordinates><panel_attributes>HidingHerbavore
--
+ HidingHerbavore(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} # AI() : void
{virtual} # HidingAI() : bool
{override} # Mate() : void
{override} # TimeUpdate() : void
{override} # IsPossiblePreyEventHandler(object, ControlEvents.GetPossiblePreyEventArgs) : void
{override} # PregnacyEventHandler(object, ControlEvents.PrenacyEventArgs) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2913</x><y>2070</y><w>350</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40;330;40;330;60</additional_attributes></element><element><id>Relation</id><coordinates><x>2093</x><y>2020</y><w>290</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>270;10;270;30;10;30;10;50</additional_attributes></element><element><id>Text</id><coordinates><x>2293</x><y>2030</y><w>120</w><h>30</h></coordinates><panel_attributes>Interfaces

style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>2933</x><y>2080</y><w>120</w><h>30</h></coordinates><panel_attributes>Interfaces
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>3163</x><y>1990</y><w>150</w><h>50</h></coordinates><panel_attributes>lt=)-
m1=require
IEscapePredator
</panel_attributes><additional_attributes>120;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>3163</x><y>2030</y><w>150</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
IEscapePredator</panel_attributes><additional_attributes>10;20;130;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3023</x><y>1020</y><w>250</w><h>220</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IHelper
--
+ DeepCopy&lt;T&gt;(List&lt;T&gt;) : List&lt;T&gt;
+ DeepCopy&lt;T&gt;(T[]) : T[]
+ DeepCopy&lt;T&gt;((T,T)) : (T,T)
+ Add&lt;T&gt;(List&lt;T&gt;, T) : void
+ Add&lt;T&gt;(ref T[], T) : void
+ Remove&lt;T&gt;(List&lt;T&gt;, T) : void
+ Remove&lt;T&gt;(T[], T) : void
+ Contains&lt;T&gt;(List&lt;T&gt;, T) : bool
+ Contains&lt;T&gt;(T[], T] : bool
+ GenerateID() : string
+ GenerateRandomNumber(int,int) : int
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>3413</x><y>1670</y><w>100</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
IHelper</panel_attributes><additional_attributes>80;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3493</x><y>1620</y><w>250</w><h>130</h></coordinates><panel_attributes>Helper
--
_- rnd : Random _
_- ids : List&lt;string&gt; _
_- idNumber :ulong_
--
+ Instance : IHelper 
_Helper()_
- Helper()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3543</x><y>570</y><w>370</w><h>490</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
IEscapePredator
--
+ (ID, TimeSinceEsacape) getLostPredators() : (string,float)[]
+ setLostPredators((string,float)[]) : void
+ getEscapeSpeedMultiplier() : float
+ setEscapeSpeedMultiplier(float) : void
+ getDiscoverRange() : float
+ setDiscoverRange(float) : void
+ getDiscoverChance() : byte
+ setDiscoverChance(byte) : void
+ getPredatorID() : string
+ setPredatorID(string) : void
+ getIsRunning() : bool
+ setIsRunning(bool) : void
+ getTimeThresholdForBeingHuntedAgain() : float
+ setTimeThresholdForBeingHuntedAgain(float) : void
+ getEscapeSprintTime() : float
+ setEscapeSprintTime(float) : void
+ getTimeSprinted() : float
+ setTimeSprinted(float) : void
+ getEscapeDistance() : float
+ setEscapeDistance(float) : void
+ geTimeBetweenRolls() : float
+ getTimeSinceLastRoll() : float
+ setTimeSinceLastRoll(float) : void
+ getHasRolled() : bool
+ setHasRolled(bool) : void
--
+ (X, Y) EscapeLocation(string) : (float,float)
+ DiscoveredPredator(float, byte) : bool
+ TryLosePredator() : bool
+ LostPredator() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2013</x><y>1960</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=)-
m1=require
IHunt
</panel_attributes><additional_attributes>20;20;110;20</additional_attributes></element><element><id>Relation</id><coordinates><x>2013</x><y>2000</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
IHunt</panel_attributes><additional_attributes>110;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3283</x><y>1280</y><w>250</w><h>170</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IHunt
--
+ (X, Y) getPreyLastLocation() : (float,float)
+ setPreyLastLocation(float,float) : void
+ getAttackRange() : float
+ setAttackRange(float) : void
+ getAttackSpeedMultiplier() : float
+ setAttackSpeedMultiplier(float) : void
--
+ TrackPrey() : void
+ AttackPrey() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1733</x><y>2080</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=)-
m1=require
ISleep
</panel_attributes><additional_attributes>20;20;110;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1733</x><y>2120</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
ISleep</panel_attributes><additional_attributes>110;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3283</x><y>1080</y><w>250</w><h>190</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
ISleep
--
+ getSleeping() : bool
+ setSleeping(bool) : void
+ getTimeSlept() : float
+ setTimeSlept(float) : void
+ getSleepLength() : float
+ getEnergyLevel() : float
+ setEnergyLevel(float) : void
+ getMaxEnergyLevel() : float
--
+ Sleep() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3083</x><y>1250</y><w>190</w><h>230</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IBird
--
+ getCanDive() : bool
+ getMaximumHeight() : float
+ getAscendSpeed() : float
+ getDiveSpeed() : float
+ getDesendSpeed() : float
+ getAscendModifier() : float
+ getDesendModifier() : float
+ getHoverModifier() : float
+ getCurrentModifier() : float
+ setCurrentModifier(float) : void
+ getCircleRange() : float
--
+ Circle() : Vector[]</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>3503</x><y>2160</y><w>120</w><h>50</h></coordinates><panel_attributes>lt=)-
m1=require
IHide
</panel_attributes><additional_attributes>90;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>3503</x><y>2190</y><w>120</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
IHide</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3543</x><y>1070</y><w>320</w><h>320</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IHide
--
+ getStealthLevel() : int
+ setStealthLevel(int) : void
+ getTimeHidden() : float
+ setTimeHidden(float) : void
+ getMaxHideTime() : float
+ setMaxHideTime(float) : void
+ getIsHiding() : bool
+ setIsHiding(bool) : void
+ getTimeThresholdForBeingHuntedAgain() : float
+ setTimeThresholdForBeingHuntedAgain(float) : void
+ (ID, TimeSinceEscape) getLostPredators : (string,float)[]
+ setLostPredators((string,float)[]) : void
+ getCooldownBetweenHiding() : float
+ setCooldownBetweenHiding(float) : void
+ getMaxCooldownBetweenHiding() : float
+ setMaxCooldownBetweenHiding(float) : void
--
+ HideFromPredator() : void
+ LostPredator() : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2973</x><y>170</y><w>450</w><h>270</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IFamily
--
+ (Relationship, ID) getFamily() : (FamilyRelationship, ID)[]
+ setFamily((FamilyRelationsip,ID)[]) : void
+ getCanHuntParents() : bool
+ setCanHuntParents(bool) : void
+ getCanHuntSiblings() : bool
+ setCanHuntSiblings(bool) : void
+ getCanHuntChildren() : bool
+ setCanHuntChildren(bool) : void
+ getCanMateParents() : bool
+ setCanMateParents(bool) : void
+ getCanMateSiblings() : bool
+ setCanMateSiblings(bool) : void
+ getCanMateChildren() : bool
+ setCanMateChildren(bool) : void
+ RelationshipEventHandler(object, ControlEvents.TransmitDataEventArgs) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>3423</x><y>210</y><w>60</w><h>40</h></coordinates><panel_attributes>lt=-(+)
</panel_attributes><additional_attributes>40;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3463</x><y>170</y><w>130</w><h>110</h></coordinates><panel_attributes>&lt;&lt;enumeration&gt;&gt;
FamilyRelationship
--
Parent : 1
Sibling : 2
Child : 3
NonFamily : 0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3023</x><y>900</y><w>250</w><h>110</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IHerd
--
+ getHerdSize() : ushort
+ setHerdSize(ushort) : void
+ getMaxHerdSize() : ushort
+ setMaxHerdSize(ushort) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2973</x><y>450</y><w>560</w><h>440</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IPack
--
+ getRelationship() : PackRelationship
+ setRelationship(PackRelationship) :  void
+ getAlphaMatingOnly() : bool
+ setAlphaMatingOnly(bool) : void
+ (Relationship, ID) getPackMembers() : (PackMembers,string)[]
+ setPackMembers((PackMembers,string)[]) : void
+ getPackSize() : byte
+ getMaxPackSize() : byte
+ setMaxPackSize(byte): void
+ getTimeBetweenFights() : float
+ setTimeBetweenFights(float) : void
+ getFightCooldown() : float
+ setFightCooldown(float) : void
+ getCanFightForAlpha() : float
+ setCanFightForAlpha(float) : void
+ getAttackedBy() : string[]
+ setAttackedBy(string[]) : void
+ getStrikeRange() : float
+ getAttackSpeed() : float
+ getAttackCooldown() : float
+ setAttackCooldown(float) : void
--
+ Fight() : void
+ GeneratePack() : void
+ TransmitPack(string) : void
+ RelationshipEventHandler(object, ControlEvents.TransmitDataEventArgs) : void
+ RelationshipCandidateEventHandler(object, ControlEvents.RelationshipCandidatesEventArgs) : void

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3573</x><y>450</y><w>130</w><h>110</h></coordinates><panel_attributes>&lt;&lt;enumeration&gt;&gt;
PackRelationship
--
Alpha : 1
Member : 2
NonMember: 0</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>3533</x><y>480</y><w>60</w><h>40</h></coordinates><panel_attributes>lt=-(+)
</panel_attributes><additional_attributes>40;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1733</x><y>393</y><w>240</w><h>230</h></coordinates><panel_attributes>Vector
--
- posistion : float[3]
--
+ Vector(float,float,float) 
+ Vector(MapInformation,IHelper)
+ Vector(MapInformation,IHelper,float)
+ getX(void) : float
+ setX(float) : void
+ getY(void) : float
+ setY(float) : void
+ getZ(void) : float
+ setZ(float) : void
+ DistanceBetweenVectors(Vector) : float
_+ Copy(Vector) : Vector_
_+ Compare(Vector,Vector) : bool_
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1373</x><y>1553</y><w>500</w><h>50</h></coordinates><panel_attributes>MonoeciousPlant
--
+ MonoeciousPlant(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1883</x><y>1813</y><w>490</w><h>40</h></coordinates><panel_attributes>DioeciousPlant
--
+ DioeciousPlant(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2123</x><y>1773</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1553</x><y>2190</y><w>510</w><h>210</h></coordinates><panel_attributes>PackCarnivore
--
# getFindPackCooldown() : float
# setFindPackCooldown(float) : void
--
+ PackCarnivore(string, Vector, IHelper, AnimalPublisher, DrawPublisher, MapInformation)
{override} # TimeUpdate() : void
{override} # Reproduce() : void
{override} # Death() : void
{override} # FindMate() : string
{override} # GenerateRandomEndLocation() : Vector
{override} # CanMateEventHandler(object,ControlEvents.PossibleMateEventArgs) : void
{override} # DamageEventHandler(object, ControlEvents.DoHealthDamageEventArgs) : void
{override} # RemoveSubscriptions() : void
{virtual} # PackAI() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1423</x><y>2200</y><w>150</w><h>50</h></coordinates><panel_attributes>lt=)-
m1=require
IPack
</panel_attributes><additional_attributes>20;20;130;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1423</x><y>2240</y><w>150</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
IPack</panel_attributes><additional_attributes>130;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>2053</x><y>2160</y><w>60</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>40;10;40;110;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1763</x><y>220</y><w>170</w><h>160</h></coordinates><panel_attributes>&lt;&lt;struct&gt;&gt;
Colour
--
+ getRed() : byte
+ getGreen() : byte
+ getBlue() : byte
+ getAlpha() : byte
--
+ Colour(byte,byte,byte,byte)
+ Colour(byte,byte,byte)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2913</x><y>2070</y><w>350</w><h>280</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;230;330;230;330;260</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2973</x><y>2330</y><w>540</w><h>110</h></coordinates><panel_attributes>SleepingHerbavore
--
# baseDiscoverChance : byte
# baseDiscoverRange : float
--
+ SleepingHerbavore(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} # TimeUpdate() : void
{override} # AI() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>3503</x><y>2340</y><w>120</w><h>50</h></coordinates><panel_attributes>lt=)-
m1=require
ISleep
</panel_attributes><additional_attributes>90;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>3503</x><y>2390</y><w>120</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
ISleep</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>623</x><y>110</y><w>430</w><h>1700</h></coordinates><panel_attributes>ControlEvents
{innerclass
GetPossiblePreyEventArgs
--
- (PreyLocation, PreyID, PreySpecies) prey : List(Vector,string,string)
--
+ getSenderID() : string
--
+ GetPossiblePreyEventArgs(string) 
+ AddPreyInformation((Vector,string,string)) : void
+ GetPossiblePreys() : List(Vector,string,string)
innerclass}
{innerclass
SetPreyEventArgs
--

+ (senderID, receiverID) getIDs() : (string,string)
--
+ SetPreyEventArgs(string,string)
innerclass}
{innerclass
RemovePreyEventArgs
--
+ (senderID, receiverID) getIDs() : (string,string)
--
+ RemovePreyEventArgs(string,string)
innerclass}
{innerclass
SetMateEventArgs
--
+ (senderID, receiverID) getIDs() : (string,string)
--
+ SetMateEventArgs(string,string)
innerclass}
{innerclass
RemoveMateEventArgs
--
+ (senderID, receiverID) getIDs() : (string,string)
--
+ RemoveMateEventArgs(string,string)
innerclass}
{innerclass
PossibleMateEventArgs
--
- (mateID, Location) possibleMates : List(string,Vector)
--
+ getSenderID() : string
+ (Species, Gender) getInformation() : (string,Vector)
--
+ PossibleMateEventArgs(string,char,string)
+ AddMateInformation(string,Vector) : void
+ GetPossibleMates() : List(string,Vector)
innerclass}
{innerclass
DrawEventArgs
--
- (Design, Colour, Location) drawInformation : List(Point[],Colour,Vector)
--
+ getDrawInformation() : List(Point[],Colour,Vector)
--
+ DrawEventArgs()
+ AddDrawInformation((Point[], Colour, Vector)) : void
innerclass}
{innerclass
AIEventArgs
--
+ getTimeSinceLastUpdate() : float
--
+ AI(float)
innerclass}
{innerclass
EatenEventArgs
--
- nutrientValue : float
--
+ getReceiverID() : string
+ getNutrient() : float
+ setNutrient(float) : void
--
+ EatenEventArgs(string)
innerclass}
{innerclass
DeadEventArgs
--
+ getReceiverID() : string
--
+ DeadEventArgs(string)
innerclass}
{innerclass
GetOtherLocationEventArgs
--
+ getReceiverID() : string
+ getLocation() : Vector
+ setLocation(Vector) : void
+ getGetLocation() : Vector
--
+ GetOtherLocationEventArgs(string)
innerclass}
{innerclass
InformPredatorOfPreyDeathEventArgs
--
+ (SenderID, ReceiverID) getIDs() : (string,string)
+ setIDs((string,string)) : void
--
+ InformPredatorOfPreyDeathEventArgs(string,string)
innerclass}
{innerclass
DoHealthDamageEventArgs
--
- died : bool
--
+ (SenderID, ReceiverID) getIDs() : (string,string)
+ getDamage() : byte
+ setDied(bool) : void
+ getKilled() : bool
--
+ DoHealthDamageEventArgs(string,string,byte)
innerclass}
{innerclass
GetAllLocationsEventArgs
--
- (Location,ID) locationsAndIDs : List(Vector,string)
--
+ getSenderID() : string
+ getGetInformation() : List(Vector,string)
--
+ GetAllLocationsEventArgs(string)
+ AddLocation(Vector,string) : void
innerclass}
{innerclass
SpeciesAndAmountEventArgs
--
- (Speices, Amount) information : List(string,ushort)
--
+ GetList() : List(string,ushort)
--
+ SpeciesAndAmountEventArgs()
+ Add(string) : void
innerclass}
{innerclass
TransmitDataEventArgs
--
+ (SenderID, ReceiverID) getIDs() : (string,string)
+ getData() : object
--
+ TransmitDataEventArgs(string,string,object)
innerclass}
{innerclass
RelationshipCandidatesEventArgs
--
- (Location,ID,Gender) information : List(Vector,string,char)
--
+ getSenderID() : string
+ getSpecies() : string
+ getRelationshipType() : Type
+ getGetList() : List(Vector,string,char)
--
+ RelationshipCandidatesEventArgs(string,string,Type)
+ Add(Vector,string,char) : void
innerclass}
{innerclass
PregnacyEventArgs
--
+ (SenderID, ReceiverID) getIDs() : void 
+ getIsPregnant() : bool
--
+ PregnacyEventArgs(string,string,bool)
innerclass}</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>793</x><y>48</y><w>100</w><h>30</h></coordinates><panel_attributes>EventArgs</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1080</x><y>109</y><w>510</w><h>210</h></coordinates><panel_attributes>DrawPublisher
--
&lt;&lt;Delegate&gt;&gt;
+ drawEventHandler(object,ControlEvents.DrawEventArgs) : void 
&lt;&lt;Event&gt;&gt;
+ RaiseDrawEvent : drawEventhandler
&lt;&lt;Delegate&gt;&gt;
+ speciesAndAmountEventHandler(object,ControlEvents.SpeciesAndAmountEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseSpeciesAndAmountEvent : speciesAndAmountEventHandler
+ Draw() : List(Point[],Colour,Vector)
# OnDraw(ControlEvents.DrawEventArgs) : List(Point[],Colour,Vector)
+ SpeciesAndAmount() : List(string,ushort)
# OnSpeciesAndAmount(ControlEvents.SpeciesAndAmountEventArgs) : List(string,ushort)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>109</y><w>610</w><h>1480</h></coordinates><panel_attributes>LifeformPublisher
--
&lt;&lt;Delegate&gt;&gt;
+ getPossiblePreyEventHandler(object,ControlEvents.GetPossiblePreyEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseFindPreyEvent : getPossiblePreyEventHandler
&lt;&lt;Delegate&gt;&gt;
+ setPreyEventHandler(object,ControlEvents.SetPreyEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseSetPreyEvent : setPreyEventHandler
&lt;&lt;Delegate&gt;&gt;
+ removePreyEventHandler(object,ControlEvents.RemovePreyEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseRemovePreyEvent : removePreyEventHandler
&lt;&lt;Delegate&gt;&gt;
+ informPredatorOfPreyDeathEventHandler(object,ControlEvents.InformPredatorOfPreyDeathEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseInformHunterOfPreyDeath : informPredatorOfPreyDeathEventhandler
&lt;&lt;Delegate&gt;&gt;
+ possibleMatesEventHandler(object,ControlEvents.PossibleMateEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaisePossibleMatesEvent : possibleMatesEventHandler
&lt;&lt;Delegate&gt;&gt;
+ setmateEventHandler(object, ControlEvents.SetmateEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseSetmateEvent : setMateEventHandler
&lt;&lt;Delegate&gt;&gt;
+ removeMateEventHandler(object,ControlEvents.RemovemateEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseRemoveMateEvent : removeMateEventHandler
&lt;&lt;Delegate&gt;&gt;
+ pregnacyEventHandler(object,ControlEvents.PregnacyEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaisePregnacy : pregnacyEventHandler
&lt;&lt;Delegate&gt;&gt;
+ aiEventHandler(object,ControlEvents.AIEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseAIEvent : aiEventHandler
&lt;&lt;Delegate&gt;&gt;
+ getLocationEventHandler(object,ControlEvents.GetOtherLocationEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseGetLocation : getLocationEventHandler
&lt;&lt;Delegate&gt;&gt;
+ getAllLocationsEventHandler(object, ControlEvents.GetAllLocationsEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseGetAllLocations : getAllLocationsEventHandler
&lt;&lt;Delegate&gt;&gt;
+ eatenEventHandler(object,ControlEvents.EatenEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseEaten : eatenEventHandler
&lt;&lt;Delegate&gt;&gt;
+ diedEventHandler(object, ControlEvents.DeadEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseDied : diedEventHandler
&lt;&lt;Delegate&gt;&gt;
+ damageEventHandler(object,ControlEvents.DoHealthDmageEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseDamage : damageEventHandler
&lt;&lt;Delegate&gt;&gt;
+ transmitDataEventHandler(object,ControlEvents.TransmitDataEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ RaiseTransmitData : transmitDataEventhandler
&lt;&lt;Delegate&gt;&gt;
+ possibleRelationshipJoinerEventhandler(object, ControlEvents.RelationshipCandidatesEventArgs) : void
&lt;&lt;Event&gt;&gt;
--
+ RaisePossibleRelationshipJoiner : possibleRelationshipJoinerEventHandler
+ GetPossiblePreys(string) : List&lt;(Vector,string,string)
# OnGetPossiblePreys(ControlEvents.GetPossiblePreyEventArgs) : List(Vector,string,string)
+ SetPrey(string,string) : void
# OnSetPrey(ControlEvents.SetPreyEventArgs)
+ RemovePrey(string,string) : void
# OnRemovePrey(ControlEvents.RemovePreyEventArgs) : void
+ PossibleMates(string,char,string) : List(string,Vector)
# OnPossibleMates(ControlEvents.PossibleMateEventArgs) : List(string,Vector)
+ SetMate(string,string) : void
# On SetMate(ControlEvents.SetMateEventArgs) : void
+ RemoveMate(string,string) : void
# OmRemoveMate(ControlEvents.RemovemateEventArgs) : void
+ AI(float) : void
# OnAI(ControlEvents.AIEventArgs) : void
+ GetLocation(string) : Vector
# OnGetLocation(ControlEvents.GetOtherLocationEventArgs) : Vector
+ Death(string) : void
# OnDeath(ControlEvents.DeadEventArgs) : void
+ Eat(string) : float
# OnEat(ControlEvents.EatenEventArgs) : float
+ InformPredatorOfPreyDeath(string,string) : void
# OnInformPredatorOfPreyDeath(ControlEvents.InformPredatorOfPreyDeathEventArgs) : void
+ DamageLifeform(string,string,byte) : bool
# OnDamageLifeform(ControlEvents.DoHealthDamageEventArgs) : bool
+ GetAllLocations(string) : List(Vector,string)
# OnGetAllLocations(ControlEvents.GetAllLocationsEventArgs) : List(Vector,string)
+ TransmitData(string,string,object) : void
# OnTransmitData(ControlEvents.TransmitDataEventArgs) : void
+ PossibleRelationshipJoiner(string,string,Type) : List(Vector,string,char)
# OnPossibleRelationshipJoiner(ControlEvents.RelationshipCandidatesEventArgs) : List(Vector,string,char)
+ Pregnacy(string,string,bool) : void
# OnPregnacy(ControlEvents.PregnacyEventArgs) : void





</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1085</x><y>328</y><w>270</w><h>110</h></coordinates><panel_attributes>Publisher
--
_- lifeformPublisher : LifeformPublisher_
_- drawPublisher : DrawPublisher_
--
_+ getGetLifeformInstance() : LifeformPublisher _
_+ getGetDrawInstance() : DrawPublisher_
_ Publisher()_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1065</x><y>468</y><w>190</w><h>60</h></coordinates><panel_attributes>ImageEventArgs
--
+ getBitMapImage() : Bitmap
+ setBitMapIamge(Bitmap) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1275</x><y>468</y><w>340</w><h>60</h></coordinates><panel_attributes>TextEventArgs
--
+ (Speices, Amount) getListInformation() : List(string,ushort)
+ setListInformation(List(string,ushort)) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>835</x><y>68</y><w>630</w><h>420</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;30;230;30;230;380;610;380;610;400</additional_attributes></element><element><id>Relation</id><coordinates><x>835</x><y>68</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>835</x><y>68</y><w>350</w><h>420</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;30;230;30;230;380;330;380;330;400</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1255</x><y>848</y><w>280</w><h>450</h></coordinates><panel_attributes>Output
--
&lt;&lt;Delegate&gt;&gt;
+ paintEvent(object, ImageEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ PaintEvent : paintEvent
&lt;&lt;Delegate&gt;&gt;
+ textEvent (object,TextEventArgs) : void
&lt;&lt;Event&gt;&gt;
+ TextEvent : textEvent
--
+ getMap() : Bitmap
+ setMap(Bitmap) : void
+ getMapImage() : BitmapImage
+ setMapImage(BitmapImage) : void
+ getFramesPerSecond() : float
+ setFramesPerSecond(float) : void
- getTimeInSecondsBetweenFrames() : float
- setTimeInSecondsBetweenFrames(float) : void
- getDrawPublisher() : DrawPublisher
- setDrawPublisher(DrawPublisher) : void
- getLifeformPublisher() : LifeformPublisher
- setLifeformPublisher(LifeformPublisher) : void
+ getInstance() : Output
--
_Output()_
+ RunVisualThread() : void
+ RunAIThread() : void
- AIThread() : void
- Visualthread() : void
- Draw(Bitmap,List(Point[],Colour,Vector) : Bitmap


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1235</x><y>698</y><w>330</w><h>140</h></coordinates><panel_attributes>MainWindow
--
+ MainWindow()
- OnWindowLoaded(object,RoutedEventArgs) : void
- Output_UpdateInformation(object,TextEventArgs) : void
+ UpdateInformation(string) : void
- Output_UpdateVisualEvent(object,ImageEventArgs) : void
+ UpdateVisualImage(BitmapSource) : void
_- ConvertBitmapToBitmapImage(Bitmap) : BitmapImage_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1733</x><y>640</y><w>240</w><h>160</h></coordinates><panel_attributes>MapInformation
--
- (width,height) mapSize : (ushort,ushort)
--
+ getGetSizeOfMap() : (ushort,ushort)
+ setSetSizeOfmap((ushort,ushort)) : void
+ getOneAgeInSeconds() : float
+ setOneAgeInSeoncds(float) : void
_+ getInstance() : MapInformation_
--
_ MapInformation()_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1833</x><y>2440</y><w>510</w><h>160</h></coordinates><panel_attributes>BirdCarnivore
--
# circleLocations : Vector[]
# isDiving : bool
--
+ BirdCarnivore(string, Vector, IHelper, AnimalPublisher, DrawPublisher, MapInformation)
{override} # AI() : void
{override} # FindNearestFood() : string
{override} # GenerateRandomEndLocation() : Vector
{override} # Move() : void
{virtual} # CircleAI() : bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2083</x><y>2020</y><w>320</w><h>440</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>280;10;280;30;300;30;300;160;40;160;40;280;10;280;10;420</additional_attributes></element><element><id>Relation</id><coordinates><x>2333</x><y>2450</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=)-
m1=require
IBird
</panel_attributes><additional_attributes>100;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>2333</x><y>2500</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
IBird</panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3283</x><y>900</y><w>250</w><h>170</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
ITerritorial
--
+ (x,y) getTerritory() : (ushort, ushort)[]
+ setTerritory((ushort,ushort)[]): void
+ getTargets() : string[]
+ setTargets(string[]) : void
--
+ AttachOther(string) : void
+ IsAttackedEventHandler() : void
+ FindTargetEventHandler() : void
+ GenerateTerritory() : (ushort, ushort) </panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1613</x><y>1510</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3633</x><y>2320</y><w>540</w><h>140</h></coordinates><panel_attributes>BirdHerbavore
--
# circleLocations : Vector[]
# needToGoLower: bool
--
+ Bird(string, Vector, IHelper, LifeformPublisher, DrawPublisher, MapInformation)
{override} # GenerateRandomEndLocation() : Vector
{overide} # Move() : void
{overide} # HidingAI() : bool
{virtual} # CircleAI() : bool
 

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>4163</x><y>2340</y><w>140</w><h>50</h></coordinates><panel_attributes>lt=)-
m1=require
IBird</panel_attributes><additional_attributes>110;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>4163</x><y>2390</y><w>140</w><h>50</h></coordinates><panel_attributes>lt=-()
m2=provide
IBird</panel_attributes><additional_attributes>10;20;120;20</additional_attributes></element><element><id>Relation</id><coordinates><x>3243</x><y>2260</y><w>640</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;30;620;30;620;60</additional_attributes></element></diagram>